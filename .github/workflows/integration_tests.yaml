---
name: Integration tests

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  generate_versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.generate-versions.outputs.versions }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: ./uv pip install --system -r requirements.test
    - name: Generate versions
      id: generate-versions
      run: |
        python .github/get_versions.py

  test:
    runs-on: ubuntu-latest
    needs: [generate_versions]
    strategy:
      matrix:
        ha_version: ${{ fromJSON(needs.generate_versions.outputs.versions) }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: 2.26.1
    - name: Install dependencies
      run: ./uv pip install --system -r requirements.test
    - name: Integration tests (${{ matrix.ha_version}})
      run: cd integration_tests && python test_banning_works.py
      env:
        HA_VERSION: ${{ matrix.ha_version}}
